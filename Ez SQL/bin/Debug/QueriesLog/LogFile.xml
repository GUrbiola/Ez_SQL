<?xml version="1.0" encoding="utf-8" standalone="no"?>
<QueriesRoot>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 01:34:27.381" EndTime="20121024 01:34:28.701" Lapse="1320" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 01:35:06.706" EndTime="20121024 01:35:07.266" Lapse="560" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 01:35:08.743" EndTime="20121024 01:35:09.402" Lapse="659" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 01:35:23.066" EndTime="20121024 01:35:23.271" Lapse="205" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from TFN.MASTER"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;TFN.MASTER&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:29:51.751" EndTime="20121024 09:30:06.627" Lapse="14875" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from dnis.numbers"</Code>
		<Error Line="0" Message="A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)"/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:32:43.506" EndTime="20121024 09:32:44.509" Lapse="1002" Correct="1" RecordsAffected="0" RecordsRead="501" GridCount="1" />
		<Code>"select * from dnis.numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:33:36.963" EndTime="20121024 09:33:37.138" Lapse="175" Correct="1" RecordsAffected="0" RecordsRead="501" GridCount="1" />
		<Code>"select * from dnis.numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:33:38.030" EndTime="20121024 09:33:38.194" Lapse="164" Correct="1" RecordsAffected="0" RecordsRead="501" GridCount="1" />
		<Code>"select * from dnis.numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:33:40.418" EndTime="20121024 09:33:40.592" Lapse="174" Correct="1" RecordsAffected="0" RecordsRead="501" GridCount="1" />
		<Code>"select * from dnis.numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:33:53.273" EndTime="20121024 09:33:54.033" Lapse="759" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:35:24.288" EndTime="20121024 09:35:24.928" Lapse="640" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"select * from Sys.objects"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:35:37.320" EndTime="20121024 09:35:37.639" Lapse="319" Correct="1" RecordsAffected="0" RecordsRead="143" GridCount="1" />
		<Code>"select * from Sys.objects where Type = &amp;apos;P&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:39:28.433" EndTime="20121024 09:39:28.681" Lapse="248" Correct="1" RecordsAffected="0" RecordsRead="143" GridCount="1" />
		<Code>"select * from Sys.objects where Type = &amp;apos;P&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:40:26.013" EndTime="20121024 09:40:26.320" Lapse="307" Correct="1" RecordsAffected="0" RecordsRead="143" GridCount="1" />
		<Code>"select 
	* 
from 
	Sys.objects 
where 
	Type = &amp;apos;P&amp;apos;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 09:58:19.543" EndTime="20121024 09:58:20.256" Lapse="713" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:22:34.846" EndTime="20121024 10:22:35.478" Lapse="632" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:22:40.694" EndTime="20121024 10:22:41.306" Lapse="612" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:22:44.988" EndTime="20121024 10:22:45.516" Lapse="528" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:34:35.073" EndTime="20121024 10:34:36.077" Lapse="1004" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"SELECT   
	sobj.id as OwnerId,  
	sobj.name as OwnerName,  
	cols.name as Nombre,     
	type_name(cols.xusertype) as Tipo,     
	isnull(cols.prec, 0) as Longitud,     
	isnull(cols.Scale, 0) as Escala,     
	isnull(cols.isnullable, 1) as Nullable,     
	isnull(cols.iscomputed, 0) as Calculated,  
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,     
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,   
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,   
	isnull(fk.rkeyid, 0) as ReferenceID,  
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable, 
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField, 
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName, 
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity, 
	Seed = IDENT_SEED(sobj.name), 
	Increment = IDENT_INCR (sobj.name) 
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id  
      LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid  
      LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey 
      LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id  
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)  
      LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid  
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid  
      LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;  
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid  
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:35:50.308" EndTime="20121024 10:35:50.597" Lapse="289" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"SELECT
	*
FROM
	Sys.Objects"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:36:18.612" EndTime="20121024 10:36:18.863" Lapse="251" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Objs
WHERE
	Objs.xtype = &amp;apos;U&amp;apos;   
	and Objs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
		<Error Line="1" Message="Invalid column name &amp;apos;xtype&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:36:22.530" EndTime="20121024 10:36:22.789" Lapse="259" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Objs"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:36:45.852" EndTime="20121024 10:36:46.122" Lapse="270" Correct="1" RecordsAffected="0" RecordsRead="70" GridCount="1" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Objs
WHERE
	Objs.type = &amp;apos;U&amp;apos;   "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:37:01.514" EndTime="20121024 10:37:01.841" Lapse="327" Correct="1" RecordsAffected="0" RecordsRead="33" GridCount="1" />
		<Code>"select * from __RefactorLog"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:37:09.189" EndTime="20121024 10:37:09.594" Lapse="405" Correct="1" RecordsAffected="0" RecordsRead="103" GridCount="2" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Objs
WHERE
	Objs.type = &amp;apos;U&amp;apos;   
	and Objs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	
select * from __RefactorLog"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:38:24.079" EndTime="20121024 10:38:24.713" Lapse="634" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="1" />
		<Code>"SELECT *
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = N&amp;apos;Customers&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:38:29.487" EndTime="20121024 10:38:30.454" Lapse="967" Correct="1" RecordsAffected="0" RecordsRead="489" GridCount="1" />
		<Code>"SELECT *
FROM INFORMATION_SCHEMA.COLUMNS"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:39:13.423" EndTime="20121024 10:39:18.981" Lapse="5558" Correct="1" RecordsAffected="0" RecordsRead="167" GridCount="1" />
		<Code>"SELECT *
FROM INFORMATION_SCHEMA.ROUTINES"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:41:00.530" EndTime="20121024 10:41:00.810" Lapse="280" Correct="1" RecordsAffected="0" RecordsRead="70" GridCount="1" />
		<Code>"SELECT *
FROM INFORMATION_SCHEMA.TABLES"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:41:50.275" EndTime="20121024 10:41:50.822" Lapse="547" Correct="1" RecordsAffected="0" RecordsRead="489" GridCount="1" />
		<Code>"SELECT *
FROM INFORMATION_SCHEMA.COLUMNS"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:43:35.976" EndTime="20121024 10:43:36.116" Lapse="140" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Tabs --INNER JOIN 
WHERE
	Objs.type = &amp;apos;U&amp;apos;   "</Code>
		<Error Line="1" Message="The multi-part identifier &amp;quot;Objs.type&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:43:41.276" EndTime="20121024 10:43:41.573" Lapse="297" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Tabs --INNER JOIN"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:43:53.153" EndTime="20121024 10:43:53.484" Lapse="331" Correct="1" RecordsAffected="0" RecordsRead="70" GridCount="1" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Tabs --INNER JOIN 
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:44:38.337" EndTime="20121024 10:44:38.509" Lapse="172" Correct="1" RecordsAffected="0" RecordsRead="70" GridCount="1" />
		<Code>"SELECT
	object_id as Id,
	name as TableName
	
FROM
	Sys.Objects Tabs --INNER JOIN 
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:45:43.468" EndTime="20121024 10:45:43.653" Lapse="185" Correct="1" RecordsAffected="0" RecordsRead="33" GridCount="1" />
		<Code>"select * from sys.schemas"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:46:10.845" EndTime="20121024 10:46:11.202" Lapse="357" Correct="1" RecordsAffected="0" RecordsRead="547" GridCount="2" />
		<Code>"SELECT
	*
FROM
	Sys.Objects Tabs
select * from sys.schemas"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:48:54.206" EndTime="20121024 10:48:58.251" Lapse="4045" Correct="1" RecordsAffected="0" RecordsRead="51" GridCount="8" />
		<Code>"sp_help &amp;apos;Calls.Calls&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:54:31.524" EndTime="20121024 10:54:31.681" Lapse="157" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	object_id as TableId,
	name as TableName,
	Sch.name as Schema,
	&amp;apos;&amp;apos; as Comment,
	
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
		<Error Line="4" Message="Incorrect syntax near the keyword &amp;apos;Schema&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:54:36.777" EndTime="20121024 10:54:36.854" Lapse="77" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	object_id as TableId,
	name as TableName,
	Sch.name as Schema,
	&amp;apos;&amp;apos; as Comment
	
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
		<Error Line="4" Message="Incorrect syntax near the keyword &amp;apos;Schema&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:54:45.632" EndTime="20121024 10:54:45.762" Lapse="130" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	object_id as TableId,
	name as TableName,
	Sch.name as Schema,
	&amp;apos;&amp;apos; as Comment
	
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
		<Error Line="4" Message="Incorrect syntax near the keyword &amp;apos;Schema&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:54:58.593" EndTime="20121024 10:54:58.661" Lapse="68" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as Schema,
	&amp;apos;&amp;apos; as Comment
	
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
		<Error Line="4" Message="Incorrect syntax near the keyword &amp;apos;Schema&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:55:04.943" EndTime="20121024 10:55:05.357" Lapse="414" Correct="1" RecordsAffected="0" RecordsRead="547" GridCount="2" />
		<Code>"
SELECT
	*
FROM
	Sys.Objects Tabs
select * from sys.schemas"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:56:14.320" EndTime="20121024 10:56:14.537" Lapse="217" Correct="1" RecordsAffected="0" RecordsRead="70" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment
	
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:56:39.914" EndTime="20121024 10:56:40.483" Lapse="569" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 10:56:53.580" EndTime="20121024 10:56:54.355" Lapse="775" Correct="1" RecordsAffected="0" RecordsRead="1530" GridCount="2" />
		<Code>"
SELECT
	*
FROM
	Sys.Objects Tabs
select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:00:27.861" EndTime="20121024 11:00:28.173" Lapse="312" Correct="1" RecordsAffected="0" RecordsRead="489" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:01:01.761" EndTime="20121024 11:01:02.337" Lapse="576" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:06:57.158" EndTime="20121024 11:06:57.490" Lapse="332" Correct="1" RecordsAffected="0" RecordsRead="34" GridCount="1" />
		<Code>"select * from Sys.Types"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:07:55.745" EndTime="20121024 11:07:56.231" Lapse="486" Correct="1" RecordsAffected="0" RecordsRead="16626" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Cols.system_type_id = Cols.system_type_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	and Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:08:23.609" EndTime="20121024 11:08:23.840" Lapse="231" Correct="1" RecordsAffected="0" RecordsRead="748" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Cols.system_type_id = Cols.system_type_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:08:40.152" EndTime="20121024 11:08:40.377" Lapse="224" Correct="1" RecordsAffected="0" RecordsRead="22" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	--INNER JOIN Sys.Types Typ ON Cols.system_type_id = Cols.system_type_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:09:07.093" EndTime="20121024 11:09:07.622" Lapse="529" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:09:19.455" EndTime="20121024 11:09:19.660" Lapse="205" Correct="1" RecordsAffected="0" RecordsRead="748" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Cols.system_type_id = Cols.system_type_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:09:40.611" EndTime="20121024 11:09:40.815" Lapse="204" Correct="1" RecordsAffected="0" RecordsRead="22" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Typ.system_type_id = Cols.system_type_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:09:51.350" EndTime="20121024 11:09:51.700" Lapse="350" Correct="1" RecordsAffected="0" RecordsRead="34" GridCount="1" />
		<Code>"select * from Sys.Types"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:10:08.064" EndTime="20121024 11:10:08.286" Lapse="222" Correct="1" RecordsAffected="0" RecordsRead="22" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId,
	Typ.name as &amp;apos;Type&amp;apos;
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Typ.system_type_id = Cols.system_type_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:10:44.260" EndTime="20121024 11:10:44.845" Lapse="585" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:12:13.320" EndTime="20121024 11:12:13.586" Lapse="266" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select * from sys.objects where object_id = 251147940"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:14:17.857" EndTime="20121024 11:14:18.402" Lapse="545" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:14:47.499" EndTime="20121024 11:14:47.595" Lapse="96" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Sys.Keys"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Sys.Keys&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:14:54.115" EndTime="20121024 11:14:54.185" Lapse="70" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Sys.PrimaryKeys"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Sys.PrimaryKeys&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:14:56.900" EndTime="20121024 11:14:56.971" Lapse="71" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Sys.PrimaryKey"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Sys.PrimaryKey&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:15:57.712" EndTime="20121024 11:15:57.807" Lapse="95" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Sys.Key_Contraint"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Sys.Key_Contraint&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:15:58.385" EndTime="20121024 11:15:58.460" Lapse="75" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Sys.Key_Contraint"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Sys.Key_Contraint&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:16:04.820" EndTime="20121024 11:16:05.137" Lapse="317" Correct="1" RecordsAffected="0" RecordsRead="74" GridCount="1" />
		<Code>"select * from Sys.Key_Constraints"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:17:01.849" EndTime="20121024 11:17:02.147" Lapse="298" Correct="1" RecordsAffected="0" RecordsRead="61" GridCount="1" />
		<Code>"select * from sys.objects where type = &amp;apos;PK&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:17:52.432" EndTime="20121024 11:17:53.049" Lapse="617" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:18:26.565" EndTime="20121024 11:18:26.844" Lapse="279" Correct="1" RecordsAffected="0" RecordsRead="61" GridCount="1" />
		<Code>"select * from sys.objects where type = &amp;apos;PK&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:18:36.009" EndTime="20121024 11:18:36.324" Lapse="315" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"select * from sys.objects"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:21:03.496" EndTime="20121024 11:21:03.758" Lapse="262" Correct="1" RecordsAffected="0" RecordsRead="198" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId,
	Typ.name as &amp;apos;Type&amp;apos;,
	Cols.precision as Precision,
	Cols.is_nullable as Nullable,
	Cols.is_computed as Computed,
	CASE WHEN Pk.object_id IS NULL THEN 0 ELSE 1 END AS Pk
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Typ.system_type_id = Cols.system_type_id
	LEFT OUTER JOIN Sys.Objects Pk ON Pk.parent_object_id = Tabs.object_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:21:29.769" EndTime="20121024 11:21:30.049" Lapse="280" Correct="1" RecordsAffected="0" RecordsRead="22" GridCount="1" />
		<Code>"SELECT
	Tabs.object_id as TableId,
	Tabs.name as TableName,
	Sch.name as &amp;apos;Schema&amp;apos;,
	&amp;apos;&amp;apos; as Comment,
	Cols.name as ColumnName,
	Cols.column_id as ColumnId,
	Typ.name as &amp;apos;Type&amp;apos;,
	Cols.precision as Precision,
	Cols.is_nullable as Nullable,
	Cols.is_computed as Computed,
	CASE WHEN Pk.object_id IS NULL THEN 0 ELSE 1 END AS Pk
	
FROM
	Sys.Objects Tabs INNER JOIN Sys.Schemas Sch ON Tabs.schema_id = Sch.schema_id
	INNER JOIN Sys.Columns Cols ON Tabs.object_id = Cols.object_id
	INNER JOIN Sys.Types Typ ON Typ.system_type_id = Cols.system_type_id
	LEFT OUTER JOIN Sys.Objects Pk ON Pk.Type = &amp;apos;PK&amp;apos; AND Pk.parent_object_id = Tabs.object_id
WHERE
	Tabs.type = &amp;apos;U&amp;apos;   
	AND Tabs.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	AND Tabs.name = &amp;apos;Calls&amp;apos;
ORDER BY
	Tabs.object_id, Cols.column_id"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:22:03.675" EndTime="20121024 11:22:03.979" Lapse="304" Correct="1" RecordsAffected="0" RecordsRead="61" GridCount="1" />
		<Code>"
select * from sys.objects where type = &amp;apos;PK&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:22:56.474" EndTime="20121024 11:22:56.833" Lapse="359" Correct="1" RecordsAffected="0" RecordsRead="197" GridCount="1" />
		<Code>"select * from Sys.Indexes"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:23:19.024" EndTime="20121024 11:23:19.599" Lapse="575" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:24:00.891" EndTime="20121024 11:24:01.268" Lapse="377" Correct="1" RecordsAffected="0" RecordsRead="197" GridCount="1" />
		<Code>"select * from Sys.Indexes"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:29:02.302" EndTime="20121024 11:29:02.429" Lapse="127" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from sysschemas"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;sysschemas&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:29:06.235" EndTime="20121024 11:29:06.404" Lapse="169" Correct="1" RecordsAffected="0" RecordsRead="33" GridCount="1" />
		<Code>"select * from sys.schemas"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:29:21.683" EndTime="20121024 11:29:22.001" Lapse="318" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"select * from sys.objects"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:29:30.192" EndTime="20121024 11:29:30.886" Lapse="694" Correct="1" RecordsAffected="0" RecordsRead="514" GridCount="1" />
		<Code>"select * from sysobjects"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:32:45.392" EndTime="20121024 11:32:45.512" Lapse="120" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;
	sobj.id as TableId,  
	sobj.name as TableName,  
	cols.name as ColumnName,     
	type_name(cols.xusertype) as ColumnType,     
	isnull(cols.prec, 0) as Precision,     
	isnull(cols.Scale, 0) as Scale,     
	isnull(cols.isnullable, 1) as Nullable,     
	isnull(cols.iscomputed, 0) as Calculated,  
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,     
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,   
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,   
	isnull(fk.rkeyid, 0) as ReferenceID,  
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable, 
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField, 
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName, 
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity, 
	Seed = IDENT_SEED(sobj.name), 
	Increment = IDENT_INCR (sobj.name) 
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id  
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid  
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey 
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id  
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)  
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid  
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid  
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid  "</Code>
		<Error Line="3" Message="Incorrect syntax near &amp;apos;sobj&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:33:08.953" EndTime="20121024 11:33:09.053" Lapse="100" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;
	sobj.id as TableId,  
	sobj.name as TableName,  
	cols.name as ColumnName,     
	type_name(cols.xusertype) as ColumnType,     
	isnull(cols.prec, 0) as Precision,     
	isnull(cols.Scale, 0) as Scale,     
	isnull(cols.isnullable, 1) as Nullable,     
	isnull(cols.iscomputed, 0) as Calculated,  
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,     
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,   
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,   
	isnull(fk.rkeyid, 0) as ReferenceID,  
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable, 
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField, 
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName, 
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity, 
	Seed = IDENT_SEED(sobj.name), 
	Increment = IDENT_INCR (sobj.name) 
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id  
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid  
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey 
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id  
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)  
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid  
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid  
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid  "</Code>
		<Error Line="3" Message="Incorrect syntax near &amp;apos;sobj&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:33:19.226" EndTime="20121024 11:33:20.119" Lapse="893" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,  
	sobj.name as TableName,  
	cols.name as ColumnName,     
	type_name(cols.xusertype) as ColumnType,     
	isnull(cols.prec, 0) as Precision,     
	isnull(cols.Scale, 0) as Scale,     
	isnull(cols.isnullable, 1) as Nullable,     
	isnull(cols.iscomputed, 0) as Calculated,  
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,     
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,   
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,   
	isnull(fk.rkeyid, 0) as ReferenceID,  
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable, 
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField, 
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName, 
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity, 
	Seed = IDENT_SEED(sobj.name), 
	Increment = IDENT_INCR (sobj.name) 
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id  
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid  
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey 
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id  
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)  
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid  
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid  
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid  
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:34:02.592" EndTime="20121024 11:34:03.474" Lapse="882" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,  
	sobj.name as TableName,  
	cols.name as ColumnName,     
	type_name(cols.xusertype) as ColumnType,     
	isnull(cols.prec, 0) as Precision,     
	isnull(cols.Scale, 0) as Scale,     
	isnull(cols.isnullable, 1) as Nullable,     
	isnull(cols.iscomputed, 0) as Calculated,  
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,     
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,   
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,   
	isnull(fk.rkeyid, 0) as ReferenceID,  
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable, 
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField, 
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName, 
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity, 
	IDENT_SEED(sobj.name) as Seed, 
	IDENT_INCR(sobj.name) as Increment 
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id  
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid  
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey 
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id  
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)  
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid  
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid  
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid  
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:46:59.429" EndTime="20121024 11:47:00.293" Lapse="864" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField,
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sobj.name) as Seed,
	IDENT_INCR(sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:50:21.495" EndTime="20121024 11:50:21.761" Lapse="266" Correct="1" RecordsAffected="0" RecordsRead="262" GridCount="1" />
		<Code>"select * from syscomments"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:50:59.756" EndTime="20121024 11:51:00.415" Lapse="659" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField,
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sobj.name) as Seed,
	IDENT_INCR(sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:56:21.117" EndTime="20121024 11:56:22.085" Lapse="968" Correct="1" RecordsAffected="0" RecordsRead="1617" GridCount="1" />
		<Code>"select * from syscolumns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:57:46.631" EndTime="20121024 11:57:47.569" Lapse="938" Correct="1" RecordsAffected="0" RecordsRead="1617" GridCount="1" />
		<Code>"select * from syscolumns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:58:20.289" EndTime="20121024 11:58:20.714" Lapse="425" Correct="1" RecordsAffected="0" RecordsRead="1016" GridCount="1" />
		<Code>"select * from Sys.Columns"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121024 11:59:27.496" EndTime="20121024 11:59:28.450" Lapse="954" Correct="1" RecordsAffected="0" RecordsRead="1617" GridCount="1" />
		<Code>"select * from syscolumns order by id, colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121025 12:00:37.146" EndTime="20121025 12:00:38.020" Lapse="874" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"SELECT
	sch.name as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceField,
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sobj.name) as Seed,
	IDENT_INCR(sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid
	"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 12:41:09.762" EndTime="20121026 12:41:11.033" Lapse="1271" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 12:42:01.936" EndTime="20121026 12:42:02.560" Lapse="624" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 12:42:57.770" EndTime="20121026 12:42:58.113" Lapse="343" Correct="1" RecordsAffected="0" RecordsRead="6" GridCount="1" />
		<Code>"select * from Vendors.Vendors"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 10:35:28.171" EndTime="20121026 10:35:29.381" Lapse="1210" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:02:13.922" EndTime="20121026 11:02:14.218" Lapse="296" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="1" />
		<Code>"SELECT  
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos;  "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:02:48.874" EndTime="20121026 11:02:49.030" Lapse="156" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE VIEW DBO.FirstView AS
	select
		*
	from
		Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:03:03.008" EndTime="20121026 11:03:03.086" Lapse="78" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE VIEW DBO.SecondView AS
	select
		*
	from
		Dnis.LicensedNumbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:03:34.929" EndTime="20121026 11:03:35.287" Lapse="358" Correct="1" RecordsAffected="0" RecordsRead="25" GridCount="1" />
		<Code>"SELECT  
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos;  "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:03:45.427" EndTime="20121026 11:03:48.223" Lapse="2795" Correct="1" RecordsAffected="0" RecordsRead="25" GridCount="1" />
		<Code>"SELECT  
--	sobj.id as ViewId, 
--	sobj.name as ViewName, 
--	cols.name as FieldName,    
--	type_name(cols.xusertype) as Type,    
--	isnull(cols.prec, 0) as Length,    
--	isnull(cols.Scale, 0) as Scale,    
--	isnull(cols.isnullable, 1) as Nullable,    
--	isnull(cols.iscomputed, 0) as Calculated	 
	*
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos;  "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:07:07.829" EndTime="20121026 11:07:08.139" Lapse="310" Correct="1" RecordsAffected="0" RecordsRead="25" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos; 
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:07:13.927" EndTime="20121026 11:07:14.161" Lapse="234" Correct="1" RecordsAffected="0" RecordsRead="25" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos; 
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:08:29.546" EndTime="20121026 11:08:29.780" Lapse="234" Correct="1" RecordsAffected="0" RecordsRead="25" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos; 
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:08:54.100" EndTime="20121026 11:08:54.209" Lapse="109" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE VIEW Dnis.ThirdView AS
	select
		*
	from
		Dnis.LicensingDetails"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:09:21.614" EndTime="20121026 11:09:21.786" Lapse="171" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"	select
		*
	from
		Alerts.AlertService"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Alerts.AlertService&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:09:29.898" EndTime="20121026 11:09:29.960" Lapse="62" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE VIEW Calls.FourthView AS
	select
		*
	from
		Clients.Clients"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:09:31.941" EndTime="20121026 11:09:32.160" Lapse="218" Correct="1" RecordsAffected="0" RecordsRead="44" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;V&amp;apos; 
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:29:29.788" EndTime="20121026 11:29:30.178" Lapse="390" Correct="1" RecordsAffected="0" RecordsRead="498" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;P&amp;apos; 
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:29:46.324" EndTime="20121026 11:29:46.558" Lapse="234" Correct="1" RecordsAffected="0" RecordsRead="511" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj LEFT OUTER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;P&amp;apos; 
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:30:35.300" EndTime="20121026 11:30:35.503" Lapse="202" Correct="1" RecordsAffected="0" RecordsRead="511" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as ViewId, 
	sobj.name as ViewName, 
	cols.name as FieldName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj LEFT OUTER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;P&amp;apos; 
	AND sobj.category = 0
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:40:33.232" EndTime="20121026 11:40:33.715" Lapse="483" Correct="1" RecordsAffected="0" RecordsRead="22" GridCount="1" />
		<Code>"SELECT *
FROM sys.objects
WHERE type IN (&amp;apos;FN&amp;apos;, &amp;apos;IF&amp;apos;, &amp;apos;TF&amp;apos;) "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:40:49.041" EndTime="20121026 11:40:49.681" Lapse="639" Correct="1" RecordsAffected="0" RecordsRead="22" GridCount="1" />
		<Code>"SELECT *
FROM sysobjects
WHERE type IN (&amp;apos;FN&amp;apos;, &amp;apos;IF&amp;apos;, &amp;apos;TF&amp;apos;) "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:41:20.454" EndTime="20121026 11:41:20.563" Lapse="109" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from syscomment"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;syscomment&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:41:22.950" EndTime="20121026 11:41:23.293" Lapse="343" Correct="1" RecordsAffected="0" RecordsRead="266" GridCount="1" />
		<Code>"select * from syscomments"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:41:41.920" EndTime="20121026 11:41:42.201" Lapse="280" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select * from syscomments where id = 619149251"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:41:59.474" EndTime="20121026 11:41:59.677" Lapse="202" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select text from syscomments where id = 619149251"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:56:34.402" EndTime="20121026 11:56:34.742" Lapse="340" Correct="1" RecordsAffected="0" RecordsRead="38" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as FunctionId, 
	sobj.name as FunctionName, 
	cols.name as ParamName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj LEFT OUTER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;TF&amp;apos; 
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:57:19.183" EndTime="20121026 11:57:19.323" Lapse="140" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from GetTagsForUser(5494, 7)"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;GetTagsForUser&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121026 11:57:28.563" EndTime="20121026 11:57:29.453" Lapse="890" Correct="1" RecordsAffected="0" RecordsRead="12" GridCount="1" />
		<Code>"select * from Security.GetTagsForUser(5494, 7)"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:13:16.553" EndTime="20121027 12:13:16.673" Lapse="120" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>""</Code>
		<Error Line="-1" Message="ExecuteReader: CommandText property has not been initialized"/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:13:31.623" EndTime="20121027 12:13:31.673" Lapse="50" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>""</Code>
		<Error Line="-1" Message="The connection was not closed. The connection&amp;apos;s current state is open."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:13:46.113" EndTime="20121027 12:13:46.153" Lapse="40" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from calls.calls"</Code>
		<Error Line="-1" Message="The connection was not closed. The connection&amp;apos;s current state is open."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:14:57.261" EndTime="20121027 12:14:57.901" Lapse="639" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:01.161" EndTime="20121027 12:15:02.035" Lapse="873" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:02.965" EndTime="20121027 12:15:03.480" Lapse="514" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:09.845" EndTime="20121027 12:15:10.360" Lapse="514" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:15.040" EndTime="20121027 12:15:16.179" Lapse="1138" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:17.520" EndTime="20121027 12:15:18.082" Lapse="561" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:21.280" EndTime="20121027 12:15:21.342" Lapse="62" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>""</Code>
		<Error Line="-1" Message="ExecuteReader: CommandText property has not been initialized"/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:15:24.587" EndTime="20121027 12:15:24.634" Lapse="46" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>""</Code>
		<Error Line="-1" Message="The connection was not closed. The connection&amp;apos;s current state is open."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:17.738" EndTime="20121027 12:16:17.972" Lapse="234" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"adsasdasasddas"</Code>
		<Error Line="1" Message="Could not find stored procedure &amp;apos;adsasdasasddas&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:18.627" EndTime="20121027 12:16:18.689" Lapse="62" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"adsasdasasddas"</Code>
		<Error Line="1" Message="Could not find stored procedure &amp;apos;adsasdasasddas&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:19.188" EndTime="20121027 12:16:19.251" Lapse="62" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"adsasdasasddas"</Code>
		<Error Line="1" Message="Could not find stored procedure &amp;apos;adsasdasasddas&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:19.391" EndTime="20121027 12:16:19.469" Lapse="78" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"adsasdasasddas"</Code>
		<Error Line="1" Message="Could not find stored procedure &amp;apos;adsasdasasddas&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:25.912" EndTime="20121027 12:16:26.505" Lapse="592" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:33.394" EndTime="20121027 12:16:33.488" Lapse="93" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>""</Code>
		<Error Line="-1" Message="ExecuteReader: CommandText property has not been initialized"/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:16:35.407" EndTime="20121027 12:16:35.469" Lapse="62" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>""</Code>
		<Error Line="-1" Message="The connection was not closed. The connection&amp;apos;s current state is open."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:20:55.913" EndTime="20121027 12:20:56.022" Lapse="109" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"                 ssd"</Code>
		<Error Line="1" Message="Could not find stored procedure &amp;apos;ssd&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 12:21:07.551" EndTime="20121027 12:21:08.112" Lapse="561" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 07:24:46.391" EndTime="20121027 07:24:47.341" Lapse="950" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 07:26:19.633" EndTime="20121027 07:26:20.043" Lapse="410" Correct="1" RecordsAffected="0" RecordsRead="501" GridCount="1" />
		<Code>"select * from dnis.numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121027 07:29:03.513" EndTime="20121027 07:29:04.033" Lapse="520" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121028 11:39:59.525" EndTime="20121028 11:40:00.492" Lapse="967" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from calls.calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121028 11:40:42.519" EndTime="20121028 11:40:42.753" Lapse="234" Correct="1" RecordsAffected="0" RecordsRead="6" GridCount="1" />
		<Code>"select * from vendors.vendors"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121028 11:06:07.126" EndTime="20121028 11:06:07.626" Lapse="500" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Calls.GetCallByID"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Calls.GetCallByID&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121028 11:07:00.616" EndTime="20121028 11:07:01.686" Lapse="1070" Correct="1" RecordsAffected="0" RecordsRead="501" GridCount="1" />
		<Code>"select * from Dnis.Numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121028 11:54:34.110" EndTime="20121028 11:54:34.370" Lapse="260" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select
	*
from
	Calls.Call
order by
	Id desc"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Calls.Call&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121028 11:54:37.560" EndTime="20121028 11:54:39.030" Lapse="1470" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select
	*
from
	Calls.Calls
order by
	Id desc"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121029 12:38:43.774" EndTime="20121029 12:38:44.159" Lapse="384" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"select
	*
from
	Dnis.Catalog_AreaCode"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:45:59.903" EndTime="20121030 10:46:00.853" Lapse="950" Correct="1" RecordsAffected="0" RecordsRead="513" GridCount="1" />
		<Code>"
SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:47:24.793" EndTime="20121030 10:47:25.453" Lapse="660" Correct="1" RecordsAffected="0" RecordsRead="37" GridCount="1" />
		<Code>"SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:49:28.005" EndTime="20121030 10:49:28.595" Lapse="590" Correct="1" RecordsAffected="0" RecordsRead="37" GridCount="1" />
		<Code>"SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:49:33.735" EndTime="20121030 10:49:35.115" Lapse="1380" Correct="1" RecordsAffected="0" RecordsRead="24" GridCount="1" />
		<Code>"SELECT DISTINCT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:50:54.335" EndTime="20121030 10:50:54.495" Lapse="160" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT DISTINCT
	--ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
--	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
--	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
		<Error Line="37" Message="The multi-part identifier &amp;quot;sch.name&amp;quot; could not be bound."/>
		<Error Line="21" Message="The multi-part identifier &amp;quot;sch.name&amp;quot; could not be bound."/>
		<Error Line="22" Message="The multi-part identifier &amp;quot;sch.name&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:51:06.405" EndTime="20121030 10:51:06.525" Lapse="120" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT DISTINCT
	--ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
--	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
--	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	--and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
		<Error Line="21" Message="The multi-part identifier &amp;quot;sch.name&amp;quot; could not be bound."/>
		<Error Line="22" Message="The multi-part identifier &amp;quot;sch.name&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:51:19.195" EndTime="20121030 10:51:19.645" Lapse="450" Correct="1" RecordsAffected="0" RecordsRead="24" GridCount="1" />
		<Code>"SELECT DISTINCT
	--ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity
--	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
--	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
--	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
--	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	--and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:51:46.445" EndTime="20121030 10:51:46.575" Lapse="130" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
--	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
--	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	--and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
		<Error Line="21" Message="Incorrect syntax near &amp;apos;IDENT_SEED&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:51:57.245" EndTime="20121030 10:51:57.355" Lapse="110" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
		<Error Line="21" Message="Incorrect syntax near &amp;apos;IDENT_SEED&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:52:02.935" EndTime="20121030 10:52:03.475" Lapse="540" Correct="1" RecordsAffected="0" RecordsRead="37" GridCount="1" />
		<Code>"SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121030 10:52:11.565" EndTime="20121030 10:52:12.145" Lapse="580" Correct="1" RecordsAffected="0" RecordsRead="37" GridCount="1" />
		<Code>"SELECT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;
	and ISNULL(sch.name, &amp;apos;dbo&amp;apos;) = &amp;apos;Calls&amp;apos;
	and sobj.name = &amp;apos;Calls&amp;apos;
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 06:52:13.806" EndTime="20121031 06:52:14.820" Lapse="1014" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 07:27:12.533" EndTime="20121031 07:27:13.157" Lapse="624" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 07:27:35.342" EndTime="20121031 07:27:35.862" Lapse="520" Correct="1" RecordsAffected="0" RecordsRead="500" GridCount="1" />
		<Code>"select * from Calls.Calls where Calls.Calls.ID &amp;gt; 500"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 07:27:43.884" EndTime="20121031 07:27:44.448" Lapse="564" Correct="1" RecordsAffected="0" RecordsRead="500" GridCount="1" />
		<Code>"select * from Calls.Calls where Calls.Calls.ID &amp;gt; 500 order by ID "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 07:27:49.835" EndTime="20121031 07:27:50.287" Lapse="452" Correct="1" RecordsAffected="0" RecordsRead="500" GridCount="1" />
		<Code>"select * from Calls.Calls where Calls.Calls.ID &amp;gt; 500 order by ID"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 07:30:26.324" EndTime="20121031 07:30:26.543" Lapse="218" Correct="1" RecordsAffected="0" RecordsRead="469" GridCount="1" />
		<Code>"select * from Calls.Tags"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 08:46:29.375" EndTime="20121031 08:46:29.905" Lapse="530" Correct="1" RecordsAffected="0" RecordsRead="817" GridCount="1" />
		<Code>"select
	*
from
	Clients.Tags T inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
where
	T.ID &amp;gt; 100
	
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 08:55:15.294" EndTime="20121031 08:55:16.154" Lapse="860" Correct="1" RecordsAffected="0" RecordsRead="499" GridCount="1" />
		<Code>"
SELECT DISTINCT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:00:58.411" EndTime="20121031 09:00:59.216" Lapse="804" Correct="1" RecordsAffected="0" RecordsRead="499" GridCount="1" />
		<Code>"
SELECT DISTINCT
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as TableId,
	sobj.name as TableName,
	cols.colid as ColumnId,
	cols.name as ColumnName,
	type_name(cols.xusertype) as ColumnType,
	isnull(cols.prec, 0) as Precision,
	isnull(cols.Scale, 0) as Scale,
	isnull(cols.isnullable, 1) as Nullable,
	isnull(cols.iscomputed, 0) as Calculated,
	isnull(comm.text, &amp;apos;&amp;apos;) as DefaultValue,
	case when pk.xtype is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as PKey,
	case when fk.fkey is null then &amp;apos;0&amp;apos; else &amp;apos;1&amp;apos; end as FKey,
	isnull(fk.rkeyid, 0) as ReferenceID,
	isnull(fk2.name, &amp;apos;&amp;apos;) as ReferenceTable,
	isnull(cols2.name, &amp;apos;&amp;apos;) as ReferenceFieldName,
	isnull(cols2.colid, 0) as ReferenceFieldId,
	&amp;apos;&amp;apos; as IndexName,--isnull(indx.name, &amp;apos;&amp;apos;) as IndexName,
	isnull(COLUMNPROPERTY(sobj.id,cols.name,&amp;apos;IsIdentity&amp;apos;), 0) IsIdentity,
	IDENT_SEED(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Seed,
	IDENT_INCR(sch.name + &amp;apos;.&amp;apos; + sobj.name) as Increment
FROM   
	sysobjects sobj INNER JOIN syscolumns cols ON sobj.id = cols.id
	LEFT JOIN sysforeignkeys fk ON fk.fkeyid = cols.id AND fk.fkey = cols.colid
	LEFT JOIN syscolumns cols2 ON cols2.id = fk.rkeyid AND cols2.colid = fk.rkey
	LEFT JOIN sysobjects fk2 ON fk.rkeyid = fk2.id
	LEFT JOIN syscomments comm ON cols.cdefault = comm.id OR (cols.id = comm.id and cols.colid = comm.number)
	LEFT JOIN sysindexkeys ik ON ik.id = cols.id AND ik.colid = cols.colid
	LEFT JOIN sysindexes indx ON indx.id = ik.id AND indx.indid = ik.indid
	LEFT JOIN sysobjects pk ON indx.name = pk.name AND pk.parent_obj = indx.id AND pk.xtype = &amp;apos;PK&amp;apos;
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE   
	sobj.xtype = &amp;apos;U&amp;apos;   
	and sobj.name &amp;lt;&amp;gt; &amp;apos;sysdiagrams&amp;apos;   
order by   
	sobj.name, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:28:15.279" EndTime="20121031 09:28:15.759" Lapse="480" Correct="1" RecordsAffected="0" RecordsRead="3" GridCount="1" />
		<Code>"select
	*
from
	Clients.Tags T inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
where
	Ta.AppliesSince &amp;gt; GetDate()
	
	"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:37:43.278" EndTime="20121031 09:37:43.481" Lapse="202" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select
	*
from
	Clients.Tags T inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
	Calls.Calls T
where
	T.ID &amp;gt; 100
	
	 "</Code>
		<Error Line="5" Message="Incorrect syntax near &amp;apos;Calls&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:37:59.660" EndTime="20121031 09:37:59.863" Lapse="202" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select
	*
from
	Clients.Tags T inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
	inner join Calls.Calls T on T.ID = T.ID
where
	T.ID &amp;gt; 100
	
	 "</Code>
		<Error Line="1" Message="The correlation name &amp;apos;T&amp;apos; is specified multiple times in a FROM clause."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:40:47.237" EndTime="20121031 09:40:47.346" Lapse="109" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select
	*
from
	Clients.Tags as Tg inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
	inner join Calls.Calls T on T.ID = T.ID
where
	Tg.ID &amp;gt; 100"</Code>
		<Error Line="4" Message="The multi-part identifier &amp;quot;T.ID&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:41:22.259" EndTime="20121031 09:41:22.352" Lapse="93" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select
	*
from
	Clients.Tags as Tg inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
	inner join Calls.Calls T on T.ID = T.ID
--where
--	Tg.ID &amp;gt; 100"</Code>
		<Error Line="4" Message="The multi-part identifier &amp;quot;T.ID&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:41:27.429" EndTime="20121031 09:41:27.507" Lapse="78" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select
	*
from
	Clients.Tags as Tg inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
--where
--	Tg.ID &amp;gt; 100"</Code>
		<Error Line="4" Message="The multi-part identifier &amp;quot;T.ID&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:41:33.956" EndTime="20121031 09:41:34.315" Lapse="358" Correct="1" RecordsAffected="0" RecordsRead="1499" GridCount="1" />
		<Code>"select
	*
from
	Clients.Tags as Tg inner join Clients.TagAssignments Ta on Tg.ID = Ta.TagID
--where
--	Tg.ID &amp;gt; 100"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 09:45:35.234" EndTime="20121031 09:45:35.452" Lapse="218" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="1" />
		<Code>"select
	*
from
	Clients.Configuration"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 10:22:45.769" EndTime="20121031 10:22:46.199" Lapse="430" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select
	*
from
	Util.SplitString (&amp;apos;,&amp;apos;/*char*/, &amp;apos;Texto1,Texto2,Texto3,Texto4&amp;apos;/*varchar*/) as Al"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 10:23:35.199" EndTime="20121031 10:23:35.409" Lapse="210" Correct="1" RecordsAffected="0" RecordsRead="38" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as FunctionId, 
	sobj.name as FunctionName, 
	cols.name as ParamName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated	 
FROM  
	sysobjects sobj LEFT OUTER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;TF&amp;apos; 
ORDER BY
	sobj.id, cols.name"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 10:24:32.940" EndTime="20121031 10:24:33.060" Lapse="120" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from syscolumns where cols.id = 619149251"</Code>
		<Error Line="1" Message="The multi-part identifier &amp;quot;cols.id&amp;quot; could not be bound."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 10:24:38.930" EndTime="20121031 10:24:39.890" Lapse="960" Correct="1" RecordsAffected="0" RecordsRead="3" GridCount="1" />
		<Code>"select * from syscolumns where id = 619149251"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 10:24:59.287" EndTime="20121031 10:24:59.507" Lapse="220" Correct="1" RecordsAffected="0" RecordsRead="38" GridCount="1" />
		<Code>"SELECT  
	ISNULL(sch.name, &amp;apos;dbo&amp;apos;) as &amp;apos;Schema&amp;apos;,
	sobj.id as FunctionId, 
	sobj.name as FunctionName, 
	cols.name as ParamName,    
	type_name(cols.xusertype) as Type,    
	isnull(cols.prec, 0) as Length,    
	isnull(cols.Scale, 0) as Scale,    
	isnull(cols.isnullable, 1) as Nullable,    
	isnull(cols.iscomputed, 0) as Calculated
FROM  
	sysobjects sobj LEFT OUTER JOIN syscolumns cols ON sobj.id=cols.id 
	LEFT JOIN Sys.Objects ObjAux ON sobj.id = ObjAux.object_id
	LEFT JOIN Sys.Schemas sch ON ObjAux.schema_id = sch.schema_id
WHERE  
	sobj.xtype = &amp;apos;TF&amp;apos; 
ORDER BY
	sobj.id, cols.colid"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 10:26:50.859" EndTime="20121031 10:26:51.079" Lapse="220" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select * from syscomments where id = 603149194"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:08:44.132" EndTime="20121031 11:08:44.402" Lapse="270" Correct="1" RecordsAffected="0" RecordsRead="10" GridCount="1" />
		<Code>"
select Ss.Item from Util.SplitString (&amp;apos;t1,t2,t3,t4,t5,t6,t7,t8,t9,t20&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*char*/) as Ss"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:08:52.392" EndTime="20121031 11:08:52.552" Lapse="160" Correct="1" RecordsAffected="0" RecordsRead="10" GridCount="1" />
		<Code>"
select Ss.Item from Util.SplitString (&amp;apos;t1,t2,t3,t4,t5,t6,t7,t8,t9,t20&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*char*/) as Ss"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:09:57.951" EndTime="20121031 11:09:58.171" Lapse="220" Correct="1" RecordsAffected="0" RecordsRead="10" GridCount="1" />
		<Code>"
select Ss.Item from Util.SplitString (&amp;apos;t1,t2,t3,t4,t5,t6,t7,t8,t9,t20&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*char*/) as Ss"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:11:07.181" EndTime="20121031 11:11:07.371" Lapse="190" Correct="1" RecordsAffected="0" RecordsRead="100" GridCount="1" />
		<Code>"
select 
	Ss.Item 
from 
	Util.SplitString (&amp;apos;t1,t2,t3,t4,t5,t6,t7,t8,t9,t10&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*char*/) as Ss,
	dbo.fnSplit (&amp;apos;t1,t2,t3,t4,t5,t6,t7,t8,t9,t10&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*varchar*/) as Ss2"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:15:53.950" EndTime="20121031 11:15:54.160" Lapse="210" Correct="1" RecordsAffected="0" RecordsRead="100" GridCount="1" />
		<Code>"select 
	Ss.Item as Item1,
	Ss2.item as Item2
from 
	Util.SplitString (&amp;apos;t1,t2,t3,t4,t5,t6,t7,t8,t9,t10&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*char*/) as Ss,
	dbo.fnSplit (&amp;apos;t11,t12,t13,t14,t15,t16,t17,t18,t19,t20&amp;apos;/*varchar*/, &amp;apos;,&amp;apos;/*varchar*/) as Ss2"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:20:50.169" EndTime="20121031 11:20:50.699" Lapse="530" Correct="1" RecordsAffected="0" RecordsRead="1499" GridCount="1" />
		<Code>"select
	*
from
	Clients.Tags T inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
where
	T.ID = Ta.TagID"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:22:40.383" EndTime="20121031 11:22:40.803" Lapse="420" Correct="1" RecordsAffected="0" RecordsRead="554" GridCount="1" />
		<Code>"select
	*
from
	Clients.Tags T inner join Clients.TagAssignments Ta on T.ID = Ta.TagID
where
	T.ID = Ta.TagID
	and Ta.AppliesUntil IS NULL OR Ta.AppliesUntil &amp;gt; GETDATE()"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:33:16.531" EndTime="20121031 11:33:16.781" Lapse="250" Correct="1" RecordsAffected="0" RecordsRead="1499" GridCount="1" />
		<Code>"SELECT t.ClientID FROM Clients.TagAssignments t"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121031 11:33:34.641" EndTime="20121031 11:33:34.891" Lapse="250" Correct="1" RecordsAffected="0" RecordsRead="1499" GridCount="1" />
		<Code>"SELECT t.SourceID FROM Clients.TagAssignments t"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 12:25:58.078" EndTime="20121101 12:25:58.452" Lapse="374" Correct="1" RecordsAffected="0" RecordsRead="171" GridCount="1" />
		<Code>"select * from Clients.Tags T where T.ID &amp;gt; 25"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 12:26:13.756" EndTime="20121101 12:26:14.052" Lapse="296" Correct="1" RecordsAffected="0" RecordsRead="171" GridCount="1" />
		<Code>"select *,GETUTCDATE() from Clients.Tags T where T.ID &amp;gt; 25
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:16:14.709" EndTime="20121101 06:16:15.083" Lapse="374" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"select * from Dnis.Catalog_AreaCode"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:17:49.661" EndTime="20121101 06:17:49.811" Lapse="150" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE VIEW V_LicensingData AS
	SELECT 
		* 
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
		<Error Line="6" Message="Incorrect syntax near &amp;apos;Dnis&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:18:02.568" EndTime="20121101 06:18:02.833" Lapse="265" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"	SELECT 
		* 
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:19:59.269" EndTime="20121101 06:19:59.440" Lapse="171" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"	SELECT 
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS CountryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:20:48.585" EndTime="20121101 06:20:48.648" Lapse="62" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE VIEW V_LicensingData AS
	SELECT 
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS CountryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:29:07.787" EndTime="20121101 06:29:08.047" Lapse="260" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V
WHERE
	V.AreaCode like &amp;apos;1%&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:29:12.332" EndTime="20121101 06:29:12.503" Lapse="171" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:29:17.121" EndTime="20121101 06:29:17.301" Lapse="180" Correct="1" RecordsAffected="0" RecordsRead="48" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V
WHERE
	V.AreaCode like &amp;apos;2%&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:30:28.565" EndTime="20121101 06:30:28.752" Lapse="187" Correct="1" RecordsAffected="0" RecordsRead="48" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V OUTER APPLY Util.SplitString ( V.AreaCode /*varchar*/, &amp;apos;,&amp;apos;/*char*/)
WHERE
	V.AreaCode like &amp;apos;2%&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:30:34.774" EndTime="20121101 06:30:34.986" Lapse="212" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V OUTER APPLY Util.SplitString ( V.AreaCode /*varchar*/, &amp;apos;,&amp;apos;/*char*/)"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:32:24.287" EndTime="20121101 06:32:24.505" Lapse="218" Correct="1" RecordsAffected="0" RecordsRead="48" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V OUTER APPLY Util.SplitString ( V.AreaCode /*varchar*/, &amp;apos;,&amp;apos;/*char*/)
WHERE
	V.AreaCode like &amp;apos;2%&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:32:26.970" EndTime="20121101 06:32:27.123" Lapse="153" Correct="1" RecordsAffected="0" RecordsRead="48" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V OUTER APPLY Util.SplitString ( V.AreaCode /*varchar*/, &amp;apos;,&amp;apos;/*char*/)
WHERE
	V.AreaCode like &amp;apos;2%&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 06:32:31.109" EndTime="20121101 06:32:31.312" Lapse="202" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"SELECT
	*
FROM
	dbo.V_LicensingData V OUTER APPLY Util.SplitString ( V.AreaCode /*varchar*/, &amp;apos;,&amp;apos;/*char*/)"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:11:38.209" EndTime="20121101 07:11:38.474" Lapse="265" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"	SELECT 
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS CountryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:31:29.415" EndTime="20121101 07:31:29.580" Lapse="164" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(3
9) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetail
s, &amp;apos;,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END
"</Code>
		<Error Line="135" Message="Incorrect syntax near &amp;apos;9&amp;apos;."/>
		<Error Line="247" Message="Must declare the scalar variable &amp;quot;@LicensingDetail&amp;quot;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:31:34.834" EndTime="20121101 07:31:34.958" Lapse="124" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(3
9) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetail
s, &amp;apos;,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END
"</Code>
		<Error Line="135" Message="Incorrect syntax near &amp;apos;9&amp;apos;."/>
		<Error Line="247" Message="Must declare the scalar variable &amp;quot;@LicensingDetail&amp;quot;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:31:44.474" EndTime="20121101 07:31:44.552" Lapse="78" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(3
9) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END
"</Code>
		<Error Line="135" Message="Incorrect syntax near &amp;apos;9&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:31:56.596" EndTime="20121101 07:31:56.756" Lapse="160" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:32:10.200" EndTime="20121101 07:32:10.388" Lapse="187" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) +
 &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;
,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END

"</Code>
		<Error Line="347" Message="There is already an object named &amp;apos;GetRapidRecallList&amp;apos; in the database."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:32:15.459" EndTime="20121101 07:32:15.509" Lapse="50" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) +
 &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;
,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:32:50.856" EndTime="20121101 07:32:50.936" Lapse="80" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) +

 &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails,
 &amp;apos;
,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END


"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:37:24.766" EndTime="20121101 07:37:24.891" Lapse="124" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) +

 &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails,
 &amp;apos;
,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END


"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 07:39:36.754" EndTime="20121101 07:39:36.804" Lapse="50" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) +

 &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails,
 &amp;apos;
,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END


"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:28:44.814" EndTime="20121101 08:28:45.469" Lapse="655" Correct="1" RecordsAffected="0" RecordsRead="3" GridCount="1" />
		<Code>"select * from syscomments where id = &amp;apos;779149821&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:29:13.398" EndTime="20121101 08:29:13.648" Lapse="249" Correct="1" RecordsAffected="0" RecordsRead="3" GridCount="1" />
		<Code>"select id, number, status, text from syscomments where id = &amp;apos;779149821&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:31:12.848" EndTime="20121101 08:31:16.031" Lapse="3182" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"sp_help &amp;apos;GetRapidRecallList&amp;apos;"</Code>
		<Error Line="66" Message="The object &amp;apos;GetRapidRecallList&amp;apos; does not exist in database &amp;apos;Dial800_V2&amp;apos; or is invalid for this operation."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:31:27.834" EndTime="20121101 08:31:28.473" Lapse="639" Correct="1" RecordsAffected="0" RecordsRead="12" GridCount="2" />
		<Code>"sp_help &amp;apos;Searches.GetRapidRecallList&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:33:26.414" EndTime="20121101 08:33:28.321" Lapse="1907" Correct="1" RecordsAffected="0" RecordsRead="353" GridCount="1" />
		<Code>"sp_helptext @objname = &amp;apos;Searches.GetRapidRecallList&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:33:43.390" EndTime="20121101 08:33:43.573" Lapse="183" Correct="1" RecordsAffected="0" RecordsRead="353" GridCount="1" />
		<Code>"sp_helptext @objname = &amp;apos;Searches.GetRapidRecallList&amp;apos;"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:35:09.375" EndTime="20121101 08:35:09.615" Lapse="240" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from sys.sql_modules where id = 779149821"</Code>
		<Error Line="1" Message="Invalid column name &amp;apos;id&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:35:18.267" EndTime="20121101 08:35:18.845" Lapse="577" Correct="1" RecordsAffected="0" RecordsRead="10" GridCount="1" />
		<Code>"select top 10 * from sys.sql_modules "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:35:30.560" EndTime="20121101 08:35:30.779" Lapse="218" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select top 10 * from sys.sql_modules where object_id = 779149821"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:37:18.697" EndTime="20121101 08:37:18.822" Lapse="124" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"ALTER PROCEDURE [Searches].[GetRapidRecallList]
(  
--DECLARE
  @ClientId    INT  
 ,@DNIS     VARCHAR(1000)
 ,@Tags     VARCHAR(1000)  
 ,@Status    VARCHAR(50)
 ,@LicensingType   INT = 0  
 ,@LicensingDetails  VARCHAR(1000)  
 ,@Vendor    VARCHAR(100)
 ,@PageNumber  INT = 1
 ,@RowsPerPage  INT = 10
 ,@SortColumn  VARCHAR(30) = &amp;apos;DNIS&amp;apos;  
 ,@IsAscendentSort BIT = 1   
)
 AS  
BEGIN  

 
  DECLARE  
   @SqlCommand  VARCHAR(max)  
  ,@SortColumnReal VARCHAR(30)  
  ,@SortType   VARCHAR(4)  
  
  
 CREATE TABLE #tblTemp(
     DNIS  VARCHAR(50)
    ,Tag1	VARCHAR	(300)
    ,Tag2	VARCHAR	(300)
    ,Tag3	VARCHAR	(300)
    ,Tag4	VARCHAR	(300)
    ,Tag5	VARCHAR	(300)
    ,Tag6	VARCHAR	(300)
    ,Tag7	VARCHAR	(300)
    ,Tag8	VARCHAR	(300)
    ,Tag9	VARCHAR	(300)
    ,Tag10	VARCHAR	(300)
    ,Licensed XML
    ,[Status] INT
    ,LastCDR DATETIME
    ,Vendor  VARCHAR(100)
    ,RespOrg VARCHAR(100)
    ,ClientId INT
    ,ClientName VARCHAR(100)
    ,[Owner] VARCHAR(100)
    ,LicensingType INT
    ,LicensingFilter INT DEFAULT(1),
    RowNumber int
   )
   
 ----------------------------  
 -- Define column to sort  
 ---------------------------- 
 IF (@SortColumn IS NOT NULL) 
	 SET  @SortColumnReal = CASE @SortColumn   
								 WHEN &amp;apos;DNIS&amp;apos; THEN &amp;apos;n.Number&amp;apos;  
								 WHEN &amp;apos;Campaign&amp;apos; THEN &amp;apos;dtmf.CampaignIdentifier&amp;apos;     
								 WHEN &amp;apos;LastCDR&amp;apos; THEN &amp;apos;LastCDR&amp;apos;--&amp;apos;c.[Start]&amp;apos;  
								 WHEN &amp;apos;Vendor&amp;apos; THEN &amp;apos;v.Name&amp;apos;  
								 WHEN &amp;apos;RespOrg&amp;apos; THEN &amp;apos;RespOrg&amp;apos;  
								 WHEN &amp;apos;ClientId&amp;apos; THEN &amp;apos;cl.ID&amp;apos;  
								 WHEN &amp;apos;ClientName&amp;apos; THEN &amp;apos;cl.Name&amp;apos;  
								 WHEN &amp;apos;Owner&amp;apos; THEN &amp;apos;Owner&amp;apos;
								 WHEN &amp;apos;&amp;apos; THEN &amp;apos;n.Number&amp;apos; 
								 ELSE @SortColumn 

							END  
	ELSE
	 SET  @SortColumnReal = &amp;apos;n.Number&amp;apos; 
								

 ----------------------------  
 -- Define Type Sort  
 ----------------------------  
 SET @SortType = CASE WHEN @IsAscendentSort = 1 THEN &amp;apos;ASC&amp;apos; ELSE &amp;apos;DESC&amp;apos; END  
   
 ----------------------------  
 -- Define Sql query  
 ----------------------------   
   
	SELECT  @SqlCommand = &amp;apos;  
	SELECT 
					c1.ClientID, 
					c1.DNIS, 
					c1.[Start], 
					c1.VendorID
					INTO #calls
				FROM 
					Calls.Calls c1,
					(
						SELECT 
							c2.ClientID, 
							c2.DNIS, 
							MAX(c2.[Start]) AS LastDate 
						FROM  
							Calls.Calls c2 
						WHERE c2.ClientId = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;
						GROUP BY 
							c2.ClientID, 
							c2.DNIS
					) AS c3
				WHERE 
					c1.ClientID = c3.ClientID
					AND c1.DNIS = c3.DNIS
					AND c1.[Start] = c3.LastDate 
					AND c1.ClientID = &amp;apos; + cast(@ClientId as varchar) + &amp;apos;;
	
	
	WITH PaginatedQuery AS
	(
	SELECT DISTINCT    
		n.Number AS DNIS
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 1) as Tag1
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 2) as Tag2
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 3) as Tag3
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 4) as Tag4
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 5) as Tag5
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 6) as Tag6
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 7) as Tag7
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 8) as Tag8
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 9) as Tag9
		,[Searches].[GetTagValueOfDnis] (cl.ID,&amp;apos; + CHAR(39) + &amp;apos;DNIS&amp;apos; + CHAR(39) + &amp;apos;, n.Number, 10) as Tag10
		
		,CASE   
		WHEN n.IsProvisioned = 1   
		 THEN 1   
		 ELSE 2  
		END AS Status  
		,c.[Start] as LastCDR  
		,v.Name AS Vendor     
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS RespOrg  
		,cl.ID AS ClientId   
		,cl.Name AS ClientName  
		,&amp;apos; + CHAR(39) + &amp;apos;&amp;apos; + CHAR(39) + &amp;apos; AS Owner  
		,ROW_NUMBER() OVER (ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  + &amp;apos;) AS RowNumber
	FROM   
		Dnis.Numbers n  
		JOIN Dnis.LicensedNumbers ln ON ln.Number = n.Number  
		JOIN Dnis.LicensingDetails ld ON ld.ClientID = ln.ClientID AND ld.Number = ln.Number  
		JOIN #calls AS c ON c.ClientID = ld.ClientID AND c.DNIS = ld.Number		
		JOIN Vendors.Vendors v ON v.ID = c.VendorID  
		JOIN Clients.Clients cl ON cl.ID = ln.ClientID  
	WHERE 1=1 &amp;apos;  
   
	IF (@ClientId IS NOT NULL AND @ClientId &amp;lt;&amp;gt; -1) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND ln.ClientID = &amp;apos; + CONVERT (VARCHAR (15),@ClientId)  
	END  
  
	IF (@DNIS IS NOT NULL)  
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos; AND n.Number IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@DNIS + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END   
    
	IF (@Tags IS NOT NULL)  BEGIN  
		SET 
			@SqlCommand = @SqlCommand +   
			&amp;apos;AND EXISTS (SELECT TOP 1 1 
					FROM Clients.Tags T
					INNER JOIN Clients.TagAssignments TA ON ta.TagID = t.ID AND ta.ClientID = ln.ClientID AND ta.SourceID = n.Number
					WHERE t.ClientId = ln.ClientId
					AND t.Id in (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) +@Tags + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))
					AND ta.AppliesSince &amp;lt;= SYSUTCDATETIME() 
					AND (ta.AppliesUntil IS NULL OR ta.AppliesUntil &amp;gt;=  SYSUTCDATETIME() ))&amp;apos;
	END     
   
	IF (@Status IS NOT NULL) 
	BEGIN  
		SET @SqlCommand = @SqlCommand +   
	&amp;apos; AND CASE   
	WHEN n.IsProvisioned = 1  
	THEN 1 --Ready  
	ELSE 2 --Pending  
	END IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Status + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) +  &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END     
    
	IF (@Vendor IS NOT NULL) 
	BEGIN  
		SET 
			@SqlCommand = @SqlCommand + &amp;apos; AND v.ID IN (SELECT * FROM dbo.fnSplit(&amp;apos;+ CHAR(39) + @Vendor + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;,&amp;apos; + CHAR(39) + &amp;apos;))&amp;apos;  
	END  

	--SET  
	--	@SqlCommand = @SqlCommand + &amp;apos; GROUP BY n.Number, dtmf.CampaignIdentifier, dtmf.MediaSource, dtmf.ProductCode, n.IsProvisioned, c.[Start], v.Name, cl.ID, cl.Name&amp;apos;  

	--SET 
	--	@SqlCommand = @SqlCommand + &amp;apos; ORDER BY &amp;apos; + @SortColumnReal + &amp;apos; &amp;apos; + @SortType  
   

	SET @SqlCommand = @SqlCommand + &amp;apos;) &amp;apos;

	DECLARE @SqlPagination VARCHAR(MAX)
	SET @SqlPagination = &amp;apos;SELECT *
	FROM PaginatedQuery
	WHERE RowNumber BETWEEN ((&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;) - (&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;-1)) 
	AND (&amp;apos; + cast(@PageNumber as varchar) + &amp;apos; * &amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;); &amp;apos;

	--INSERT INTO #tblTemp(DNIS, Campaign, Media, Product, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner])  
	INSERT INTO #tblTemp(DNIS,Tag1, Tag2, Tag3, Tag4, Tag5, Tag6, Tag7, Tag8, Tag9,
	            Tag10, [Status],LastCDR, Vendor, RespOrg, ClientId, ClientName, [Owner], RowNumber)  
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlPagination)

	UPDATE 
		#tblTemp
	SET 
		#tblTemp.Licensed = Dnis.LicensingDetails.Details,
		#tblTemp.LicensingType = Dnis.LicensingDetails.LicensingType
	FROM 
		#tblTemp INNER JOIN Dnis.LicensingDetails ON #tblTemp.ClientId = Dnis.LicensingDetails.ClientID AND
		#tblTemp.DNIS = Dnis.LicensingDetails.Number

	IF @LicensingType &amp;gt; 0
	BEGIN
		--PRINT &amp;apos;Licensing Type: &amp;apos; + CONVERT(VARCHAR(20), @LicensingType)
		
		UPDATE
			#tblTemp
		SET
			LicensingFilter = 0
		WHERE
			LicensingType &amp;lt;&amp;gt; @LicensingType
		
		IF LEN(ISNULL(@LicensingDetails, &amp;apos;&amp;apos;)) &amp;gt; 0 
		BEGIN
		
			DECLARE Ptr CURSOR FOR
			SELECT DNIS, Licensed, ClientId FROM #tblTemp WHERE LicensingFilter = 1

			DECLARE @IdDnis VARCHAR(20), @XMLData XML, @IdCurClient INT

			OPEN Ptr
			 
			FETCH NEXT FROM Ptr
			INTO @IdDnis, @XMLData, @IdCurClient
			
			
			WHILE @@FETCH_STATUS = 0
			BEGIN

				IF @LicensingType = 1 --Region
				BEGIN
					IF NOT EXISTS(SELECT XXX.Region FROM Dnis.GetRegionFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails,&amp;apos;,&amp;apos;) AS YYY ON XXX.Region = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END		
				END
				ELSE IF @LicensingType = 2 --States
				BEGIN
					IF NOT EXISTS(SELECT XXX.[State] FROM Dnis.GetStatesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.[State] = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END
				END
				ELSE IF @LicensingType = 3--AreaCode
				BEGIN
					IF NOT EXISTS(SELECT XXX.AreaCode FROM Dnis.GetAreaCodesFromXml(@XMLData) AS XXX INNER JOIN Util.SplitString(@LicensingDetails, &amp;apos;,&amp;apos;) AS YYY ON XXX.AreaCode = YYY.Item)
					BEGIN
						--PRINT &amp;apos;Deleted!&amp;apos;					
						UPDATE
							#tblTemp
						SET
							LicensingFilter = 0
						WHERE
							DNIS = @IdDnis
							AND ClientId = @IdCurClient
					END	
				
				END
				
				FETCH NEXT FROM Ptr
				INTO @IdDnis, @XMLData, @IdCurClient
			END   

			CLOSE Ptr
			DEALLOCATE Ptr
		
		END
		
		DELETE 
			#tblTemp
		WHERE
			LicensingFilter = 0
	END
   

 ------------------------------  
 ---- Return final records  
 ------------------------------  
	SELECT
		t.DNIS 
		,t.Licensed
		,ISNULL(t.Tag1,&amp;apos;&amp;apos;) Tag1
		,ISNULL(t.Tag2,&amp;apos;&amp;apos;) Tag2
		,ISNULL(t.Tag3,&amp;apos;&amp;apos;) Tag3
		,ISNULL(t.Tag4,&amp;apos;&amp;apos;) Tag4
		,ISNULL(t.Tag5,&amp;apos;&amp;apos;) Tag5
		,ISNULL(t.Tag6,&amp;apos;&amp;apos;) Tag6
		,ISNULL(t.Tag7,&amp;apos;&amp;apos;) Tag7
		,ISNULL(t.Tag8,&amp;apos;&amp;apos;) Tag8
		,ISNULL(t.Tag9,&amp;apos;&amp;apos;) Tag9
		,ISNULL(t.Tag10,&amp;apos;&amp;apos;)	Tag10
		,t.[Status]
		,t.LastCDR
		,t.Vendor  
		,t.RespOrg
		,t.ClientId
		,t.ClientName   
		,t.[Owner]
		,t.LicensingType
	FROM #tblTemp t
	ORDER BY 
		t. RowNumber  
  
 ------------------------------  
 ---- Return Totals  
 ------------------------------          
	DECLARE @SqlTotals as Varchar(max)
	SET @SqlTotals = &amp;apos;SELECT T.Total as TotalRows, 
							CASE WHEN T.Total%&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos; = 0  
								THEN  T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;
								ELSE (T.Total/&amp;apos; + cast(@RowsPerPage as varchar) + &amp;apos;)+1 
								END AS TotalPages  
					From
		(SELECT COUNT(1) AS Total FROM PaginatedQuery) T&amp;apos;
	EXEC (@SqlCommand + &amp;apos; &amp;apos; + @SqlTotals)	

	DROP TABLE #tblTemp  
	
END"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:37:24.469" EndTime="20121101 08:37:24.703" Lapse="234" Correct="1" RecordsAffected="0" RecordsRead="1" GridCount="1" />
		<Code>"select top 10 * from sys.sql_modules where object_id = 779149821"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121101 08:40:18.102" EndTime="20121101 08:40:18.477" Lapse="374" Correct="1" RecordsAffected="0" RecordsRead="486" GridCount="1" />
		<Code>"select * from Dnis.LicensedNumbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121105 10:27:55.840" EndTime="20121105 10:27:56.495" Lapse="655" Correct="1" RecordsAffected="0" RecordsRead="86" GridCount="1" />
		<Code>"select * from Users.AccessToClients"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:12:35.686" EndTime="20121107 12:12:36.122" Lapse="436" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select top 100 from Calls.AlertSent Als where Als.CallId &amp;gt; 1"</Code>
		<Error Line="1" Message="Incorrect syntax near the keyword &amp;apos;from&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:17:27.645" EndTime="20121107 12:17:27.801" Lapse="156" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from"</Code>
		<Error Line="1" Message="Incorrect syntax near &amp;apos;from&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:17:51.664" EndTime="20121107 12:17:52.069" Lapse="405" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="1" />
		<Code>"select * from Calls.CallerNotes"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:18:00.602" EndTime="20121107 12:18:01.304" Lapse="702" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"select * from Calls.Calls"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:18:32.091" EndTime="20121107 12:18:32.341" Lapse="249" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"select * from Util.CallHasTags (1/*int*/, &amp;apos;1,2,3&amp;apos;/*varchar*/)"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Util.CallHasTags&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:07:04.966" EndTime="20121107 09:07:05.147" Lapse="181" Correct="1" RecordsAffected="0" RecordsRead="68" GridCount="1" />
		<Code>"select 
	* 
from 
	Dnis.Catalog_States"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:07:38.896" EndTime="20121107 09:07:38.981" Lapse="84" Correct="1" RecordsAffected="0" RecordsRead="68" GridCount="2" />
		<Code>"select 
	* 
from 
	Dnis.Catalog_States
	
	
	select * from Dnis.Catalog_AreaCode as Ac WHERE Ac.State = 10"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:07:56.199" EndTime="20121107 09:07:56.256" Lapse="56" Correct="1" RecordsAffected="0" RecordsRead="67" GridCount="1" />
		<Code>"select distinct Ac.State from Dnis.Catalog_AreaCode as Ac"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:16:41.328" EndTime="20121107 09:16:41.705" Lapse="376" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"BEGIN
	SELECT * FROM Calls.Calls
END"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:17:19.765" EndTime="20121107 09:17:19.853" Lapse="87" Correct="1" RecordsAffected="0" RecordsRead="100" GridCount="1" />
		<Code>"SELECT TOP 100 * FROM dnis.Numbers"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:17:26.836" EndTime="20121107 09:17:27.143" Lapse="307" Correct="1" RecordsAffected="0" RecordsRead="1100" GridCount="2" />
		<Code>"BEGIN
	SELECT * FROM Calls.Calls
	SELECT TOP 100 * FROM dnis.Numbers
END"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:23:18.448" EndTime="20121107 09:23:18.531" Lapse="82" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="1" />
		<Code>"SELECT * FROM Dnis.DnisHistory"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:50:37.633" EndTime="20121107 09:50:37.700" Lapse="66" Correct="1" RecordsAffected="0" RecordsRead="100" GridCount="1" />
		<Code>"SELECT TOP 100 * FROM Dnis.Catalog_States Cs LEFT OUTER JOIN Dnis.Catalog_AreaCode Ac ON Cs.Id = Ac.State"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:51:31.798" EndTime="20121107 09:51:31.853" Lapse="54" Correct="1" RecordsAffected="0" RecordsRead="100" GridCount="1" />
		<Code>"SELECT TOP 100 * FROM Dnis.Catalog_States Cs LEFT OUTER JOIN Dnis.Catalog_AreaCode Ac ON Cs.Id = Ac.State ORDER BY Ac.Code"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:54:59.205" EndTime="20121107 09:54:59.237" Lapse="31" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT * FROM EXEC TFN.GetAvailabilityDetails 
@ClientId = null, --int
@Number = &amp;apos;8008624102&amp;apos; --varchar
"</Code>
		<Error Line="1" Message="Incorrect syntax near the keyword &amp;apos;EXEC&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:55:06.148" EndTime="20121107 09:55:06.220" Lapse="72" Correct="1" RecordsAffected="0" RecordsRead="395" GridCount="1" />
		<Code>"EXEC TFN.GetAvailabilityDetails 
@ClientId = null, --int
@Number = &amp;apos;8008624102&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Remote" Name="Dial 800 V2 @ MtySql V02" Server="MTYSQL-V02" Db="Dial800_V2" />
		<Execution StartTime="20121107 09:57:42.422" EndTime="20121107 09:57:42.534" Lapse="111" Correct="1" RecordsAffected="0" RecordsRead="412" GridCount="1" />
		<Code>"EXEC TFN.GetAvailabilityDetails 
@ClientId = null, --int
@Number = &amp;apos;8008624102&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Remote" Name="Dial 800 V2 @ MtySql V02" Server="MTYSQL-V02" Db="Dial800_V2" />
		<Execution StartTime="20121107 10:42:48.904" EndTime="20121107 10:42:49.036" Lapse="132" Correct="1" RecordsAffected="0" RecordsRead="412" GridCount="1" />
		<Code>"EXEC TFN.GetAvailabilityDetails 
@ClientId = null, --int
@Number = &amp;apos;8008624102&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:20:45.979" EndTime="20121107 11:20:46.110" Lapse="130" Correct="1" RecordsAffected="0" RecordsRead="326" GridCount="1" />
		<Code>"SELECT * FROM Dnis.Catalog_AreaCode"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:27:40.716" EndTime="20121107 11:27:40.796" Lapse="79" Correct="1" RecordsAffected="0" RecordsRead="326" GridCount="1" />
		<Code>"	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State "</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:31:19.270" EndTime="20121107 11:31:19.340" Lapse="69" Correct="1" RecordsAffected="326" RecordsRead="20" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:35:24.106" EndTime="20121107 11:35:24.147" Lapse="40" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"--	INTO
--		#MaxExpand
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:35:24.657" EndTime="20121107 11:35:24.729" Lapse="71" Correct="1" RecordsAffected="346" RecordsRead="144" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
--	INTO
--		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:46:10.851" EndTime="20121107 11:46:11.106" Lapse="254" Correct="1" RecordsAffected="490" RecordsRead="416" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
--	INTO
--		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	--join the tables 
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:49:02.796" EndTime="20121107 11:49:02.887" Lapse="90" Correct="1" RecordsAffected="906" RecordsRead="55" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT 
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:49:18.105" EndTime="20121107 11:49:18.232" Lapse="127" Correct="1" RecordsAffected="1812" RecordsRead="199" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #MaxExpand
	--join the tables into a new temp table, it will have all records with crashes
	SELECT 
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:49:55.190" EndTime="20121107 11:49:55.317" Lapse="126" Correct="1" RecordsAffected="1812" RecordsRead="191" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #MaxExpand
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:50:59.507" EndTime="20121107 11:50:59.649" Lapse="141" Correct="1" RecordsAffected="1812" RecordsRead="191" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #MaxExpand
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:51:29.497" EndTime="20121107 11:51:29.635" Lapse="137" Correct="1" RecordsAffected="1812" RecordsRead="61" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #NotAvailableAreaCodes WHERE Number = &amp;apos;8000000000&amp;apos;
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:52:13.623" EndTime="20121107 11:52:13.756" Lapse="132" Correct="1" RecordsAffected="1764" RecordsRead="51" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR&amp;apos;--@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #NotAvailableAreaCodes WHERE Number = &amp;apos;8000000000&amp;apos;
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:52:21.083" EndTime="20121107 11:52:21.224" Lapse="140" Correct="1" RecordsAffected="1780" RecordsRead="53" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240&amp;apos;--@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #NotAvailableAreaCodes WHERE Number = &amp;apos;8000000000&amp;apos;
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:52:26.561" EndTime="20121107 11:52:26.705" Lapse="143" Correct="1" RecordsAffected="1764" RecordsRead="51" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR&amp;apos;--@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #NotAvailableAreaCodes WHERE Number = &amp;apos;8000000000&amp;apos;
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:52:57.391" EndTime="20121107 11:52:57.523" Lapse="131" Correct="1" RecordsAffected="1516" RecordsRead="20" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;AR&amp;apos;--@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #NotAvailableAreaCodes WHERE Number = &amp;apos;8000000000&amp;apos;
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:53:13.228" EndTime="20121107 11:53:13.370" Lapse="142" Correct="1" RecordsAffected="1812" RecordsRead="61" GridCount="2" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	SELECT * FROM #NotAvailableAreaCodes WHERE Number = &amp;apos;8000000000&amp;apos;
	
	--join the tables into a new temp table, it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
	
	
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:54:14.805" EndTime="20121107 11:54:14.882" Lapse="76" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
--		Me.AreaCode,
--		Na.IsLicensed,
--		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
		<Error Line="61" Message="Incorrect syntax near the keyword &amp;apos;FROM&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:54:17.497" EndTime="20121107 11:54:17.611" Lapse="113" Correct="1" RecordsAffected="906" RecordsRead="14" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code
--		Me.AreaCode,
--		Na.IsLicensed,
--		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:54:33.614" EndTime="20121107 11:54:33.714" Lapse="99" Correct="1" RecordsAffected="782" RecordsRead="12" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code
--		Me.AreaCode,
--		Na.IsLicensed,
--		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:54:45.874" EndTime="20121107 11:54:45.960" Lapse="85" Correct="1" RecordsAffected="766" RecordsRead="4" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;AR,240&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code
--		Me.AreaCode,
--		Na.IsLicensed,
--		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:55:04.906" EndTime="20121107 11:55:05.022" Lapse="115" Correct="1" RecordsAffected="906" RecordsRead="47" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:55:10.057" EndTime="20121107 11:55:10.160" Lapse="102" Correct="1" RecordsAffected="906" RecordsRead="14" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		--Me.AreaCode,
		Na.IsLicensed,
		Na.IsReserved
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:55:59.679" EndTime="20121107 11:55:59.824" Lapse="144" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		ISNULL(Na.IsLicensed, 2) * ISNULL(Na.IsReserved, 3) as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
		<Error Line="55" Message="Operand data type bit is invalid for multiply operator."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:56:49.700" EndTime="20121107 11:56:49.809" Lapse="109" Correct="1" RecordsAffected="906" RecordsRead="14" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		Ac.IsLicensed,
		Ac.IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		CONVERT(INT, ISNULL(Na.IsLicensed, 2)) * CONVERT(INT, ISNULL(Na.IsReserved,3)) as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:59:47.279" EndTime="20121107 11:59:47.354" Lapse="74" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		CASE WHEN ISNULL(Ac.IsLicensed, 0) = 0 THEN 1 ELSE 2 END as IsLicensed
		CASE WHEN ISNULL(Ac.IsReserved, 0) = 0 THEN 1 ELSE 3 END as IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Na.IsLicensed * Na.IsReserved as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
		<Error Line="47" Message="Incorrect syntax near the keyword &amp;apos;CASE&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 11:59:51.216" EndTime="20121107 11:59:51.314" Lapse="97" Correct="1" RecordsAffected="906" RecordsRead="14" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		CASE WHEN ISNULL(Ac.IsLicensed, 0) = 0 THEN 1 ELSE 2 END as IsLicensed,
		CASE WHEN ISNULL(Ac.IsReserved, 0) = 0 THEN 1 ELSE 3 END as IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Na.IsLicensed * Na.IsReserved as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:00:41.962" EndTime="20121107 12:00:42.078" Lapse="115" Correct="1" RecordsAffected="1029" RecordsRead="16" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003,8000000500,8000000503&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		CASE WHEN ISNULL(Ac.IsLicensed, 0) = 0 THEN 1 ELSE 2 END as IsLicensed,
		CASE WHEN ISNULL(Ac.IsReserved, 0) = 0 THEN 1 ELSE 3 END as IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Na.IsLicensed * Na.IsReserved as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:02:13.633" EndTime="20121107 12:02:13.738" Lapse="104" Correct="1" RecordsAffected="1029" RecordsRead="16" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003,8000000500,8000000503&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		CASE WHEN ISNULL(Ac.IsLicensed, 0) = 0 THEN 1 ELSE 2 END as IsLicensed,
		CASE WHEN ISNULL(Ac.IsReserved, 0) = 0 THEN 1 ELSE 3 END as IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Na.IsLicensed * Na.IsReserved as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:02:21.898" EndTime="20121107 12:02:21.940" Lapse="41" Correct="1" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
--	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
--	SELECT 
--		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003,8000000500,8000000503&amp;apos;, 
--		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		CASE WHEN ISNULL(Ac.IsLicensed, 0) = 0 THEN 1 ELSE 2 END as IsLicensed,
		CASE WHEN ISNULL(Ac.IsReserved, 0) = 0 THEN 1 ELSE 3 END as IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Na.IsLicensed * Na.IsReserved as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 12:23:53.261" EndTime="20121107 12:23:53.359" Lapse="97" Correct="1" RecordsAffected="1029" RecordsRead="16" GridCount="1" />
		<Code>"--CREATE PROCEDURE [Dnis].[GetAvailabilityCrashes](@Numbers varchar(MAX), @Codes varchar(MAX)) as
BEGIN
	DECLARE @Numbers varchar(MAX), @Codes varchar(MAX)
	SELECT 
		@Numbers = &amp;apos;8000000000,8000000001,8000000002,8000000003,8000000500,8000000503&amp;apos;, 
		@Codes = &amp;apos;CAN,AR,240,ID,DC&amp;apos;
	
	--Create a temp table to store the country, state, areacode expanded data
	SELECT
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS ContryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	INTO
		#RegionDefinition
	FROM
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State 
	
	--Expand the numbers/code
	SELECT
		Num.Item as Number,
		Codes.Item as Code
	INTO
		#FirstExpand
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Util.SplitString (@Codes, &amp;apos;,&amp;apos;) as Codes
		
	--The temp table created before must be expanded now to Areacode
	SELECT
		Fe.Number,
		Fe.Code,
		Ac.AreaCode
	INTO
		#MaxExpand
	FROM
		#FirstExpand as Fe OUTER APPLY Licensing.ConvertLicensingCodeToAreaCode (-1, Fe.Code) as Ac
		
	--create a temp table to get the availabitily details
	SELECT
		Num.Item as Number,
		Ac.AreaCode,
		CASE WHEN ISNULL(Ac.IsLicensed, 0) = 0 THEN 1 ELSE 2 END as IsLicensed,
		CASE WHEN ISNULL(Ac.IsReserved, 0) = 0 THEN 1 ELSE 3 END as IsReserved
	INTO
		#NotAvailableAreaCodes
	FROM
		Util.SplitString (@Numbers, &amp;apos;,&amp;apos;) as Num OUTER APPLY Licensing.GetNoAvailableAreaCodesForDnis ( Num.Item ) as Ac
	
	
	--join the tables, this join it will have all records with crashes
	SELECT DISTINCT
		Me.Number,
		Me.Code,
		Na.IsLicensed * Na.IsReserved as Issue
	FROM
		#MaxExpand Me INNER JOIN #NotAvailableAreaCodes Na ON Me.Number = Na.Number AND Me.AreaCode = Na.AreaCode
	ORDER BY
		Me.Number, Me.Code
END

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 06:43:58.424" EndTime="20121107 06:43:58.516" Lapse="91" Correct="1" RecordsAffected="652" RecordsRead="0" GridCount="1" />
		<Code>"EXEC Dnis.GetAvailabilityCrashes 
@Codes = &amp;apos;*&amp;apos;, --varchar
@Numbers = &amp;apos;80000000540&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 08:13:08.899" EndTime="20121107 08:13:08.942" Lapse="42" Correct="1" RecordsAffected="717" RecordsRead="1" GridCount="1" />
		<Code>"EXEC Dnis.GetAvailabilityCrashes 
@Codes = &amp;apos;*&amp;apos;, --varchar
@Numbers = &amp;apos;8000000003&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 08:13:15.000" EndTime="20121107 08:13:15.036" Lapse="35" Correct="1" RecordsAffected="394" RecordsRead="0" GridCount="1" />
		<Code>"EXEC Dnis.GetAvailabilityCrashes 
@Codes = &amp;apos;&amp;apos;, --varchar
@Numbers = &amp;apos;8000000003&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 08:13:23.065" EndTime="20121107 08:13:23.105" Lapse="39" Correct="1" RecordsAffected="719" RecordsRead="3" GridCount="1" />
		<Code>"EXEC Dnis.GetAvailabilityCrashes 
@Codes = &amp;apos;USA,UST,CAN&amp;apos;, --varchar
@Numbers = &amp;apos;8000000003&amp;apos; --varchar
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121107 08:13:38.636" EndTime="20121107 08:13:38.701" Lapse="64" Correct="1" RecordsAffected="0" RecordsRead="316" GridCount="1" />
		<Code>"EXEC TFN.GetAvailabilityDetails 
@ClientId = NULL, --int
@Number = &amp;apos;8000000003&amp;apos; --varchar

"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 08:21:24.676" EndTime="20121108 08:21:24.835" Lapse="158" Correct="1" RecordsAffected="0" RecordsRead="972" GridCount="1" />
		<Code>"SELECT Ld.ClientID, Ld.Details, Ld.LicensingType, Ld.Number FROM Dnis.LicensingDetails AS Ld"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 10:47:14.110" EndTime="20121108 10:47:14.367" Lapse="256" Correct="1" RecordsAffected="0" RecordsRead="972" GridCount="1" />
		<Code>"SELECT * FROM Dnis.LicensingDetails AS Ld"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:40:20.953" EndTime="20121108 11:40:21.076" Lapse="122" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"SELECT N.CreatedOn, N.IsDeleted, N.IsSmsActive, N.LastCallReceivedOn, N.LastModified, N.Misdials, N.Number, N.Owner, N.Price, N.RespOrg FROM Dnis.Numbers AS N"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:43:05.954" EndTime="20121108 11:43:06.041" Lapse="86" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT C.ANI, C.City, C.ClientID, C.CustomData, C.Direction, C.DNIS, C.Duration, C.End, C.ID, C.ImportDate, C.IsSale, C.LastModifiedBy, C.LastModifiedOn, C.PhoneTypeID, C.Start, C.State, C.Status, C.Target, C.TerminatingPartyID, C.UnassignedReason, C.VendorCallID, C.VendorID, C.ZipCode FROM Calls.Calls AS C"</Code>
		<Error Line="1" Message="Incorrect syntax near the keyword &amp;apos;End&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:43:50.452" EndTime="20121108 11:43:50.506" Lapse="53" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT 
	C.ANI, 
	C.City, 
	C.ClientID, 
	C.CustomData, 
	C.Direction, 
	C.DNIS, 
	C.Duration, 
	C.End, 
	C.ID, 
	C.ImportDate, 
	C.IsSale, 
	C.LastModifiedBy, 
	C.LastModifiedOn, 
	C.PhoneTypeID, 
	C.Start, 
	C.State, 
	C.Status, 
	C.Target, 
	C.TerminatingPartyID, 
	C.UnassignedReason, 
	C.VendorCallID, 
	C.VendorID, 
	C.ZipCode 
FROM 
	Calls.Calls AS C"</Code>
		<Error Line="9" Message="Incorrect syntax near the keyword &amp;apos;End&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:43:56.010" EndTime="20121108 11:43:56.341" Lapse="331" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"SELECT 
	C.ANI, 
	C.City, 
	C.ClientID, 
	C.CustomData, 
	C.Direction, 
	C.DNIS, 
	C.Duration, 
	--C.End,
	C.ID, 
	C.ImportDate, 
	C.IsSale, 
	C.LastModifiedBy, 
	C.LastModifiedOn, 
	C.PhoneTypeID, 
	C.Start, 
	C.State, 
	C.Status, 
	C.Target, 
	C.TerminatingPartyID, 
	C.UnassignedReason, 
	C.VendorCallID, 
	C.VendorID, 
	C.ZipCode 
FROM 
	Calls.Calls AS C"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:44:03.771" EndTime="20121108 11:44:04.064" Lapse="293" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"SELECT 
	C.ANI, 
	C.City, 
	C.ClientID, 
	C.CustomData, 
	C.Direction, 
	C.DNIS, 
	C.Duration, 
	C.[End],
	C.ID, 
	C.ImportDate, 
	C.IsSale, 
	C.LastModifiedBy, 
	C.LastModifiedOn, 
	C.PhoneTypeID, 
	C.Start, 
	C.State, 
	C.Status, 
	C.Target, 
	C.TerminatingPartyID, 
	C.UnassignedReason, 
	C.VendorCallID, 
	C.VendorID, 
	C.ZipCode 
FROM 
	Calls.Calls AS C"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:48:27.923" EndTime="20121108 11:48:28.261" Lapse="338" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"SELECT Cc.* FROM Calls.Calls as /**/ Cc"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 01:39:36.840" EndTime="20121108 01:39:36.980" Lapse="139" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT * FROM Clients.SetUnlicenseDNIS"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Clients.SetUnlicenseDNIS&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 01:39:55.417" EndTime="20121108 01:39:55.457" Lapse="39" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT * FROM Clients.SetUnlicenseDNIS"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;Clients.SetUnlicenseDNIS&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 01:40:44.631" EndTime="20121108 01:40:44.720" Lapse="88" Correct="1" RecordsAffected="0" RecordsRead="326" GridCount="1" />
		<Code>"SELECT Ca.Type FROM Dnis.Catalog_AreaCode AS Ca"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:36:43.300" EndTime="20121108 02:36:43.502" Lapse="202" Correct="1" RecordsAffected="0" RecordsRead="794" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches ORDER BY Id desc"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:40:24.141" EndTime="20121108 02:40:24.272" Lapse="131" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:41:23.276" EndTime="20121108 02:41:23.448" Lapse="171" Correct="1" RecordsAffected="10" RecordsRead="10" GridCount="2" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC

EXEC Searches.SetDefault 
@clientID = null, --int
@IsTFNSearch = 1, --bit
@searchID = 792, --int
@userID = 7 --int


SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:41:24.633" EndTime="20121108 02:41:24.813" Lapse="179" Correct="1" RecordsAffected="10" RecordsRead="10" GridCount="2" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC

EXEC Searches.SetDefault 
@clientID = null, --int
@IsTFNSearch = 1, --bit
@searchID = 792, --int
@userID = 7 --int


SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:42:26.212" EndTime="20121108 02:42:26.355" Lapse="143" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches AS S where S.IsTFNSearch = 1 and S.UserID = 7"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:42:36.333" EndTime="20121108 02:42:36.509" Lapse="175" Correct="1" RecordsAffected="0" RecordsRead="10" GridCount="2" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC


SELECT * FROM Searches.Searches AS S where S.IsTFNSearch = 1 and S.UserID = 7
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:42:49.489" EndTime="20121108 02:42:49.672" Lapse="183" Correct="1" RecordsAffected="0" RecordsRead="10" GridCount="2" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC


SELECT * FROM Searches.Searches AS S where S.IsTFNSearch = 1 and S.UserID = 7 ORDER BY S.ID DESC
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:43:36.275" EndTime="20121108 02:43:36.393" Lapse="117" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"
SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:43:45.783" EndTime="20121108 02:43:45.826" Lapse="42" Correct="1" RecordsAffected="5" RecordsRead="0" GridCount="0" />
		<Code>"EXEC Searches.SetDefault 
@clientID = null, --int
@IsTFNSearch = 1, --bit
@searchID = 794, --int
@userID = 7 --int
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:43:49.303" EndTime="20121108 02:43:49.390" Lapse="86" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:47:46.168" EndTime="20121108 02:47:46.275" Lapse="107" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--EXEC Searches.SetDefault 
--@clientID = null, --int
--@IsTFNSearch = 1, --bit
--@searchID = 794, --int
--@userID = 7 --int
--
--
--SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:47:46.774" EndTime="20121108 02:47:46.882" Lapse="107" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--EXEC Searches.SetDefault 
--@clientID = null, --int
--@IsTFNSearch = 1, --bit
--@searchID = 794, --int
--@userID = 7 --int
--
--
--SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:47:47.446" EndTime="20121108 02:47:47.560" Lapse="113" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--EXEC Searches.SetDefault 
--@clientID = null, --int
--@IsTFNSearch = 1, --bit
--@searchID = 794, --int
--@userID = 7 --int
--
--
--SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 02:47:47.701" EndTime="20121108 02:47:47.805" Lapse="104" Correct="1" RecordsAffected="0" RecordsRead="5" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--EXEC Searches.SetDefault 
--@clientID = null, --int
--@IsTFNSearch = 1, --bit
--@searchID = 794, --int
--@userID = 7 --int
--
--
--SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC
--
--
"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Work" Server=".\" Db="Dial800_V2" />
		<Execution StartTime="20121108 04:23:22.961" EndTime="20121108 04:23:23.080" Lapse="118" Correct="1" RecordsAffected="0" RecordsRead="4" GridCount="1" />
		<Code>"SELECT * FROM Searches.Searches S WHERE S.ClientID IS NULL ORDER BY S.ID DESC"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Home" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121108 09:53:27.291" EndTime="20121108 09:53:27.801" Lapse="510" Correct="0" RecordsAffected="0" RecordsRead="0" GridCount="0" />
		<Code>"SELECT * FROM dbo.Alerts_AmIMaxPriority"</Code>
		<Error Line="1" Message="Invalid object name &amp;apos;dbo.Alerts_AmIMaxPriority&amp;apos;."/>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Home" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121108 09:56:06.491" EndTime="20121108 09:56:07.371" Lapse="880" Correct="1" RecordsAffected="0" RecordsRead="1000" GridCount="1" />
		<Code>"SELECT * FROM Calls.Calls AS C"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Home" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:41:01.973" EndTime="20121108 11:41:02.343" Lapse="370" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"	SELECT 
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS CountryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
	</Query>
	<Query>
		<Connection Group="Locals" Name="Dial 800 V2 Home" Server=".\SQLEXPRESS" Db="Dial800_V2" />
		<Execution StartTime="20121108 11:41:02.993" EndTime="20121108 11:41:03.193" Lapse="200" Correct="1" RecordsAffected="0" RecordsRead="346" GridCount="1" />
		<Code>"	SELECT 
		CC.Id AS CountryId,
		CC.Name AS Country,
		CC.Abbreviation AS CountryAbbr,
		CS.Id AS StateId,
		CS.Name AS State,
		CS.Abbreviation AS StateAbbr,
		CA.Code AS AreaCode
	FROM 
		Dnis.Catalog_Countries CC INNER JOIN Dnis.Catalog_States CS ON CC.Id = CS.Country
		INNER JOIN Dnis.Catalog_AreaCode CA ON CS.Id = CA.State"</Code>
	</Query>
